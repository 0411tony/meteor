// This file is automatically generated by JSDoc;
DocsData = {"Accounts":{"comment":"/**\n * @namespace Accounts\n * @summary The namespace for all accounts-related methods.\n */","meta":{"range":[0,90],"filename":"accounts_common.js","lineno":1,"path":"/Users/sashko/git/meteor/packages/accounts-base","code":{}},"kind":"namespace","name":"Accounts","summary":"The namespace for all accounts-related methods.","longname":"Accounts","___id":"T000002R000046","___s":true,"config":{"meta":{"range":[3343,5575],"filename":"accounts_common.js","lineno":55,"path":"/Users/sashko/git/meteor/packages/accounts-base","code":{"id":"astnode100000619","name":"Accounts.config","type":"FunctionExpression","value":"function","paramnames":["options"]},"vars":{"__meteor_runtime_config__.accountsConfigCalled":null,"options":null,"VALID_KEYS":null,"":null}},"summary":"Set global accounts options.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"params":[{"type":{"names":["Object"]},"optional":true,"name":"options"}],"name":"config","longname":"Accounts.config","kind":"function","memberof":"Accounts","scope":"static","___id":"T000002R000053","___s":true,"options":[{"type":{"names":["Boolean"]},"description":"<p>New users with an email address will receive an address verification email.</p>","name":"sendVerificationEmail"},{"type":{"names":["Boolean"]},"description":"<p>Calls to <a href=\"#accounts_createuser\"><code>createUser</code></a> from the client will be rejected. In addition, if you are using <a href=\"#accountsui\">accounts-ui</a>, the &quot;Create account&quot; link will not be available.</p>","name":"forbidClientAccountCreation"},{"type":{"names":["String","function"]},"description":"<p>If set to a string, only allows new users if the domain part of their email address matches the string. If set to a function, only allows new users if the function returns true.  The function is passed the full email address of the proposed new user.  Works with password-based sign-in and external services that expose email addresses (Google, Facebook, GitHub). All existing users still can log in after enabling this option. Example: <code>Accounts.config({ restrictCreationByEmailDomain: 'school.edu' })</code>.</p>","name":"restrictCreationByEmailDomain"},{"type":{"names":["Number"]},"description":"<p>The number of days from when a user logs in until their token expires and they are logged out. Defaults to 90. Set to <code>null</code> to disable login expiration.</p>","name":"loginExpirationInDays"},{"type":{"names":["String"]},"description":"<p>When using the <code>oauth-encryption</code> package, the 16 byte key using to encrypt sensitive account credentials in the database, encoded in base64.  This option may only be specifed on the server.  See packages/oauth-encryption/README.md for details.</p>","name":"oauthSecretKey"}],"locus":"Anywhere"},"validateLoginAttempt":{"meta":{"range":[1621,1715],"filename":"accounts_server.js","lineno":51,"path":"/Users/sashko/git/meteor/packages/accounts-base","code":{"id":"astnode100001075","name":"Accounts.validateLoginAttempt","type":"FunctionExpression","value":"function","paramnames":["func"]}},"summary":"Validate login attempts.","tags":[{"originalTitle":"locus","title":"locus","text":"Server","value":"Server"}],"params":[{"type":{"names":["function"]},"description":"<p>Called whenever a login is attempted (either successful or unsuccessful).  A login can be aborted by returning a falsy value or throwing an exception.</p>","name":"func"}],"name":"validateLoginAttempt","longname":"Accounts.validateLoginAttempt","kind":"function","memberof":"Accounts","scope":"static","___id":"T000002R000086","___s":true,"options":[],"locus":"Server"},"onCreateUser":{"meta":{"range":[32388,32547],"filename":"accounts_server.js","lineno":976,"path":"/Users/sashko/git/meteor/packages/accounts-base","code":{"id":"astnode100003117","name":"Accounts.onCreateUser","type":"FunctionExpression","value":"function","paramnames":["func"]},"vars":{"onCreateUserHook":null}},"summary":"Customize new user creation.","tags":[{"originalTitle":"locus","title":"locus","text":"Server","value":"Server"}],"params":[{"type":{"names":["function"]},"description":"<p>Called whenever a new user is created. Return the new user object, or throw an <code>Error</code> to abort the creation.</p>","name":"func"}],"name":"onCreateUser","longname":"Accounts.onCreateUser","kind":"function","memberof":"Accounts","scope":"static","___id":"T000002R000294","___s":true,"options":[],"locus":"Server"},"validateNewUser":{"meta":{"range":[35236,35317],"filename":"accounts_server.js","lineno":1056,"path":"/Users/sashko/git/meteor/packages/accounts-base","code":{"id":"astnode100003340","name":"Accounts.validateNewUser","type":"FunctionExpression","value":"function","paramnames":["func"]}},"summary":"Set restrictions on new user creation.","tags":[{"originalTitle":"locus","title":"locus","text":"Server","value":"Server"}],"params":[{"type":{"names":["function"]},"description":"<p>Called whenever a new user is created. Takes the new user object, and returns true to allow the creation or false to abort.</p>","name":"func"}],"name":"validateNewUser","longname":"Accounts.validateNewUser","kind":"function","memberof":"Accounts","scope":"static","___id":"T000002R000310","___s":true,"options":[],"locus":"Server"},"createUser":{"meta":{"range":[3912,4457],"filename":"password_client.js","lineno":108,"path":"/Users/sashko/git/meteor/packages/accounts-password","code":{"id":"astnode100009903","name":"Accounts.createUser","type":"FunctionExpression","value":"function","paramnames":["options","callback"]},"vars":{"options":null,"options.password":null}},"summary":"Create a new user.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"params":[{"type":{"names":["function"]},"description":"<p>Client only, optional callback. Called with no arguments on success, or with a single <code>Error</code> argument on failure.</p>","name":"callback"},{"type":{"names":["Object"]},"optional":true,"name":"options"}],"name":"createUser","longname":"Accounts.createUser","kind":"function","memberof":"Accounts","scope":"static","___id":"T000002R000734","___s":true,"options":[{"type":{"names":["String"]},"description":"<p>A unique name for this user.</p>","name":"username"},{"type":{"names":["String"]},"description":"<p>The user's email address.</p>","name":"email"},{"type":{"names":["String"]},"description":"<p>The user's password. This is <strong>not</strong> sent in plain text over the wire.</p>","name":"password"},{"type":{"names":["Object"]},"description":"<p>The user's profile, typically including the <code>name</code> field.</p>","name":"profile"}],"locus":"Anywhere"},"changePassword":{"meta":{"range":[5240,6773],"filename":"password_client.js","lineno":145,"path":"/Users/sashko/git/meteor/packages/accounts-password","code":{"id":"astnode100009970","name":"Accounts.changePassword","type":"FunctionExpression","value":"function","paramnames":["oldPassword","newPassword","callback"]},"vars":{"":null}},"summary":"Change the current user's password. Must be logged in.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"params":[{"type":{"names":["String"]},"description":"<p>The user's current password. This is <strong>not</strong> sent in plain text over the wire.</p>","name":"oldPassword"},{"type":{"names":["String"]},"description":"<p>A new password for the user. This is <strong>not</strong> sent in plain text over the wire.</p>","name":"newPassword"},{"type":{"names":["function"]},"optional":true,"description":"<p>Optional callback. Called with no arguments on success, or with a single <code>Error</code> argument on failure.</p>","name":"callback"}],"name":"changePassword","longname":"Accounts.changePassword","kind":"function","memberof":"Accounts","scope":"static","___id":"T000002R000740","___s":true,"options":[],"locus":"Client"},"forgotPassword":{"meta":{"range":[7286,7478],"filename":"password_client.js","lineno":206,"path":"/Users/sashko/git/meteor/packages/accounts-password","code":{"id":"astnode100010111","name":"Accounts.forgotPassword","type":"FunctionExpression","value":"function","paramnames":["options","callback"]}},"summary":"Request a forgot password email.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"params":[{"type":{"names":["function"]},"optional":true,"description":"<p>Optional callback. Called with no arguments on success, or with a single <code>Error</code> argument on failure.</p>","name":"callback"},{"type":{"names":["Object"]},"optional":true,"name":"options"}],"name":"forgotPassword","longname":"Accounts.forgotPassword","kind":"function","memberof":"Accounts","scope":"static","___id":"T000002R000745","___s":true,"options":[{"type":{"names":["String"]},"description":"<p>The email address to send a password reset link.</p>","name":"email"}],"locus":"Client"},"resetPassword":{"meta":{"range":[8170,8546],"filename":"password_client.js","lineno":226,"path":"/Users/sashko/git/meteor/packages/accounts-password","code":{"id":"astnode100010139","name":"Accounts.resetPassword","type":"FunctionExpression","value":"function","paramnames":["token","newPassword","callback"]}},"summary":"Reset the password for a user using a token received in email. Logs the user in afterwards.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"params":[{"type":{"names":["String"]},"description":"<p>The token retrieved from the reset password URL.</p>","name":"token"},{"type":{"names":["String"]},"description":"<p>A new password for the user. This is <strong>not</strong> sent in plain text over the wire.</p>","name":"newPassword"},{"type":{"names":["function"]},"optional":true,"description":"<p>Optional callback. Called with no arguments on success, or with a single <code>Error</code> argument on failure.</p>","name":"callback"}],"name":"resetPassword","longname":"Accounts.resetPassword","kind":"function","memberof":"Accounts","scope":"static","___id":"T000002R000746","___s":true,"options":[],"locus":"Client"},"verifyEmail":{"meta":{"range":[9060,9290],"filename":"password_client.js","lineno":253,"path":"/Users/sashko/git/meteor/packages/accounts-password","code":{"id":"astnode100010189","name":"Accounts.verifyEmail","type":"FunctionExpression","value":"function","paramnames":["token","callback"]}},"summary":"Marks the user's email address as verified. Logs the user in afterwards.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"params":[{"type":{"names":["String"]},"description":"<p>The token retrieved from the verification URL.</p>","name":"token"},{"type":{"names":["function"]},"optional":true,"description":"<p>Optional callback. Called with no arguments on success, or with a single <code>Error</code> argument on failure.</p>","name":"callback"}],"name":"verifyEmail","longname":"Accounts.verifyEmail","kind":"function","memberof":"Accounts","scope":"static","___id":"T000002R000750","___s":true,"options":[],"locus":"Client"},"setPassword":{"meta":{"range":[10469,10842],"filename":"password_server.js","lineno":326,"path":"/Users/sashko/git/meteor/packages/accounts-password","code":{"id":"astnode100011068","name":"Accounts.setPassword","type":"FunctionExpression","value":"function","paramnames":["userId","newPlaintextPassword"]},"vars":{"user":null}},"summary":"Forcibly change the password for a user.","tags":[{"originalTitle":"locus","title":"locus","text":"Server","value":"Server"}],"params":[{"type":{"names":["String"]},"description":"<p>The id of the user to update.</p>","name":"userId"},{"type":{"names":["String"]},"description":"<p>A new password for the user.</p>","name":"newPassword"}],"name":"setPassword","longname":"Accounts.setPassword","kind":"function","memberof":"Accounts","scope":"static","___id":"T000002R000827","___s":true,"options":[],"locus":"Server"},"sendResetPasswordEmail":{"meta":{"range":[11744,13104],"filename":"password_server.js","lineno":364,"path":"/Users/sashko/git/meteor/packages/accounts-password","code":{"id":"astnode100011172","name":"Accounts.sendResetPasswordEmail","type":"FunctionExpression","value":"function","paramnames":["userId","email"]},"vars":{"user":null,"email":null,"token":null,"when":null,"tokenRecord":null,".reset":null,"resetPasswordUrl":null,"options":null,"options.html":null}},"summary":"Send an email with a link the user can use to reset their password.","tags":[{"originalTitle":"locus","title":"locus","text":"Server","value":"Server"}],"params":[{"type":{"names":["String"]},"description":"<p>The id of the user to send email to.</p>","name":"userId"},{"type":{"names":["String"]},"optional":true,"description":"<p>Optional. Which address of the user's to send the email to. This address must be in the user's <code>emails</code> list. Defaults to the first email in the list.</p>","name":"email"}],"name":"sendResetPasswordEmail","longname":"Accounts.sendResetPasswordEmail","kind":"function","memberof":"Accounts","scope":"static","___id":"T000002R000838","___s":true,"options":[],"locus":"Server"},"sendEnrollmentEmail":{"meta":{"range":[13875,15304],"filename":"password_server.js","lineno":419,"path":"/Users/sashko/git/meteor/packages/accounts-password","code":{"id":"astnode100011367","name":"Accounts.sendEnrollmentEmail","type":"FunctionExpression","value":"function","paramnames":["userId","email"]},"vars":{"user":null,"email":null,"token":null,"when":null,"tokenRecord":null,".reset":null,"enrollAccountUrl":null,"options":null,"options.html":null}},"summary":"Send an email with a link the user can use to set their initial password.","tags":[{"originalTitle":"locus","title":"locus","text":"Server","value":"Server"}],"params":[{"type":{"names":["String"]},"description":"<p>The id of the user to send email to.</p>","name":"userId"},{"type":{"names":["String"]},"optional":true,"description":"<p>Optional. Which address of the user's to send the email to. This address must be in the user's <code>emails</code> list. Defaults to the first email in the list.</p>","name":"email"}],"name":"sendEnrollmentEmail","longname":"Accounts.sendEnrollmentEmail","kind":"function","memberof":"Accounts","scope":"static","___id":"T000002R000857","___s":true,"options":[],"locus":"Server"},"sendVerificationEmail":{"meta":{"range":[18249,19994],"filename":"password_server.js","lineno":548,"path":"/Users/sashko/git/meteor/packages/accounts-password","code":{"id":"astnode100011779","name":"Accounts.sendVerificationEmail","type":"FunctionExpression","value":"function","paramnames":["userId","address"]},"vars":{"user":null,"email":null,"":null,"address":null,"tokenRecord":null,"user.services.email.verificationTokens":null,"verifyEmailUrl":null,"options":null,"options.html":null}},"summary":"Send an email with a link the user can use verify their email address.","tags":[{"originalTitle":"locus","title":"locus","text":"Server","value":"Server"}],"params":[{"type":{"names":["String"]},"description":"<p>The id of the user to send email to.</p>","name":"userId"},{"type":{"names":["String"]},"optional":true,"description":"<p>Optional. Which address of the user's to send the email to. This address must be in the user's <code>emails</code> list. Defaults to the first unverified email in the list.</p>","name":"email"}],"name":"sendVerificationEmail","longname":"Accounts.sendVerificationEmail","kind":"function","memberof":"Accounts","scope":"static","___id":"T000002R000899","___s":true,"options":[],"locus":"Server"}},"Deps":{"Dependency":{"comment":"/**\n * @summary A Dependency represents an atomic unit of reactive data that a\n * computation might depend on. Reactive data sources such as Session or\n * Minimongo internally create different Dependency objects for different\n * pieces of data, each of which may be depended on by multiple computations.\n * When the data changes, the computations are invalidated.\n * @class\n * @instanceName dependency\n */","meta":{"range":[6802,6864],"filename":"deps.js","lineno":238,"path":"/Users/sashko/git/meteor/packages/deps","code":{"id":"astnode100267073","name":"Deps.Dependency","type":"FunctionExpression","value":"function","paramnames":[]},"vars":{"this._dependentsById":null}},"summary":"A Dependency represents an atomic unit of reactive data that a\ncomputation might depend on. Reactive data sources such as Session or\nMinimongo internally create different Dependency objects for different\npieces of data, each of which may be depended on by multiple computations.\nWhen the data changes, the computations are invalidated.","kind":"class","tags":[{"originalTitle":"instanceName","title":"instancename","text":"dependency","value":"dependency"}],"name":"Dependency","longname":"Deps.Dependency","memberof":"Deps","scope":"static","___id":"T000002R050770","___s":true,"instancename":"dependency"},"Dependency#depend":{"meta":{"range":[7706,8139],"filename":"deps.js","lineno":258,"path":"/Users/sashko/git/meteor/packages/deps","code":{"id":"astnode100267086","name":"Deps.Dependency.prototype.depend","type":"FunctionExpression","value":"function","paramnames":["computation"]},"vars":{"computation":null,"self":null,"id":null,"self._dependentsById[undefined]":null,"":null}},"summary":"Declares that the current computation (or `fromComputation` if given) depends on `dependency`.  The computation will be invalidated the next time `dependency` changes.\n\nIf there is no current computation and `depend()` is called with no arguments, it does nothing and returns false.\n\nReturns true if the computation is a new dependent of `dependency` rather than an existing one.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"params":[{"type":{"names":["Deps.Computation"]},"optional":true,"description":"<p>An optional computation declared to depend on <code>dependency</code> instead of the current computation.</p>","name":"fromComputation"}],"name":"depend","longname":"Deps.Dependency#depend","kind":"function","memberof":"Deps.Dependency","scope":"instance","___id":"T000002R050772","___s":true,"options":[],"locus":"Client"},"Dependency#changed":{"meta":{"range":[8307,8459],"filename":"deps.js","lineno":283,"path":"/Users/sashko/git/meteor/packages/deps","code":{"id":"astnode100267159","name":"Deps.Dependency.prototype.changed","type":"FunctionExpression","value":"function","paramnames":[]},"vars":{"self":null,"id":null}},"summary":"Invalidate all dependent computations immediately and remove them as dependents.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"name":"changed","longname":"Deps.Dependency#changed","kind":"function","memberof":"Deps.Dependency","scope":"instance","___id":"T000002R050777","___s":true,"options":[],"params":[],"locus":"Client"},"Dependency#hasDependents":{"meta":{"range":[8678,8825],"filename":"deps.js","lineno":295,"path":"/Users/sashko/git/meteor/packages/deps","code":{"id":"astnode100267190","name":"Deps.Dependency.prototype.hasDependents","type":"FunctionExpression","value":"function","paramnames":[]},"vars":{"self":null,"id":null}},"summary":"True if this Dependency has one or more dependent Computations, which would be invalidated if this Dependency were to change.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"name":"hasDependents","longname":"Deps.Dependency#hasDependents","kind":"function","memberof":"Deps.Dependency","scope":"instance","___id":"T000002R050780","___s":true,"options":[],"params":[],"locus":"Client"},"flush":{"meta":{"range":[9001,10648],"filename":"deps.js","lineno":308,"path":"/Users/sashko/git/meteor/packages/deps","code":{"id":"astnode100267216","name":"Deps.flush","type":"FunctionExpression","value":"function","paramnames":["_opts"]},"vars":{"inFlush":null,"willFlush":null,"throwFirstError":null,"finishedTry":null,"comp":null,"func":null}},"summary":"Process all reactive updates immediately and ensure that all invalidated computations are rerun.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"name":"flush","longname":"Deps.flush","kind":"function","memberof":"Deps","scope":"static","___id":"T000002R050783","___s":true,"options":[],"params":[],"locus":"Client"},"autorun":{"meta":{"range":[11272,11588],"filename":"deps.js","lineno":379,"path":"/Users/sashko/git/meteor/packages/deps","code":{"id":"astnode100267338","name":"Deps.autorun","type":"FunctionExpression","value":"function","paramnames":["f"]},"vars":{"constructingComputation":null,"c":null,"":null}},"summary":"Run a function now and rerun it later whenever its dependencies change. Returns a Computation object that can be used to stop or observe the rerunning.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"params":[{"type":{"names":["function"]},"description":"<p>The function to run. It receives one argument: the Computation object that will be returned.</p>","name":"runFunc"}],"name":"autorun","longname":"Deps.autorun","kind":"function","memberof":"Deps","scope":"static","___id":"T000002R050795","___s":true,"options":[],"locus":"Client"},"nonreactive":{"meta":{"range":[12019,12206],"filename":"deps.js","lineno":406,"path":"/Users/sashko/git/meteor/packages/deps","code":{"id":"astnode100267388","name":"Deps.nonreactive","type":"FunctionExpression","value":"function","paramnames":["f"]},"vars":{"previous":null}},"summary":"Run a function without tracking dependencies.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"params":[{"type":{"names":["function"]},"description":"<p>A function to call immediately.</p>","name":"func"}],"name":"nonreactive","longname":"Deps.nonreactive","kind":"function","memberof":"Deps","scope":"static","___id":"T000002R050798","___s":true,"options":[],"locus":"Client"},"onInvalidate":{"meta":{"range":[12640,12813],"filename":"deps.js","lineno":423,"path":"/Users/sashko/git/meteor/packages/deps","code":{"id":"astnode100267416","name":"Deps.onInvalidate","type":"FunctionExpression","value":"function","paramnames":["f"]}},"summary":"Registers a new [`onInvalidate`](#computation_oninvalidate) callback on the current computation (which must exist), to be called immediately when the current computation is invalidated or stopped.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"params":[{"type":{"names":["function"]},"description":"<p>A callback function that will be invoked as <code>func(c)</code>, where <code>c</code> is the computation on which the callback is registered.</p>","name":"callback"}],"name":"onInvalidate","longname":"Deps.onInvalidate","kind":"function","memberof":"Deps","scope":"static","___id":"T000002R050800","___s":true,"options":[],"locus":"Client"},"afterFlush":{"meta":{"range":[13221,13304],"filename":"deps.js","lineno":437,"path":"/Users/sashko/git/meteor/packages/deps","code":{"id":"astnode100267441","name":"Deps.afterFlush","type":"FunctionExpression","value":"function","paramnames":["f"]}},"summary":"Schedules a function to be called during the next flush, or later in the current flush if one is in progress, after all invalidated computations have been rerun.  The function will be run once and not on subsequent flushes unless `afterFlush` is called again.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"params":[{"type":{"names":["function"]},"description":"<p>A function to call at flush time.</p>","name":"callback"}],"name":"afterFlush","longname":"Deps.afterFlush","kind":"function","memberof":"Deps","scope":"static","___id":"T000002R050801","___s":true,"options":[],"locus":"Client"}},"Meteor":{"userId":{"meta":{"range":[193,263],"filename":"accounts_client.js","lineno":11,"path":"/Users/sashko/git/meteor/packages/accounts-base","code":{"id":"astnode100000002","name":"Meteor.userId","type":"FunctionExpression","value":"function","paramnames":[]}},"summary":"Get the current user id, or `null` if no user is logged in. A reactive data source.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere but publish functions","value":"Anywhere but publish functions"}],"name":"userId","longname":"Meteor.userId","kind":"function","memberof":"Meteor","scope":"static","___id":"T000002R000002","___s":true,"options":[],"params":[],"locus":"Anywhere but publish functions"},"loggingIn":{"meta":{"range":[826,906],"filename":"accounts_client.js","lineno":31,"path":"/Users/sashko/git/meteor/packages/accounts-base","code":{"id":"astnode100000049","name":"Meteor.loggingIn","type":"FunctionExpression","value":"function","paramnames":[]}},"summary":"True if a login method (such as `Meteor.loginWithPassword`, `Meteor.loginWithFacebook`, or `Accounts.createUser`) is currently in progress. A reactive data source.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"name":"loggingIn","longname":"Meteor.loggingIn","kind":"function","memberof":"Meteor","scope":"static","___id":"T000002R000007","___s":true,"options":[],"params":[],"locus":"Client"},"user":{"meta":{"range":[1100,1232],"filename":"accounts_client.js","lineno":42,"path":"/Users/sashko/git/meteor/packages/accounts-base","code":{"id":"astnode100000063","name":"Meteor.user","type":"FunctionExpression","value":"function","paramnames":[]},"vars":{"userId":null}},"summary":"Get the current user record, or `null` if no user is logged in. A reactive data source.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere but publish functions","value":"Anywhere but publish functions"}],"name":"user","longname":"Meteor.user","kind":"function","memberof":"Meteor","scope":"static","___id":"T000002R000008","___s":true,"options":[],"params":[],"locus":"Anywhere but publish functions"},"logout":{"meta":{"range":[8757,9014],"filename":"accounts_client.js","lineno":226,"path":"/Users/sashko/git/meteor/packages/accounts-base","code":{"id":"astnode100000423","name":"Meteor.logout","type":"FunctionExpression","value":"function","paramnames":["callback"]},"vars":{"":null}},"summary":"Log the user out.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"params":[{"type":{"names":["function"]},"optional":true,"description":"<p>Optional callback. Called with no arguments on success, or with a single <code>Error</code> argument on failure.</p>","name":"callback"}],"name":"logout","longname":"Meteor.logout","kind":"function","memberof":"Meteor","scope":"static","___id":"T000002R000039","___s":true,"options":[],"locus":"Client"},"logoutOtherClients":{"meta":{"range":[9299,10692],"filename":"accounts_client.js","lineno":242,"path":"/Users/sashko/git/meteor/packages/accounts-base","code":{"id":"astnode100000465","name":"Meteor.logoutOtherClients","type":"FunctionExpression","value":"function","paramnames":["callback"]},"vars":{"":null}},"summary":"Log out other clients logged in as the current user, but does not log out the client that calls this function.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"params":[{"type":{"names":["function"]},"optional":true,"description":"<p>Optional callback. Called with no arguments on success, or with a single <code>Error</code> argument on failure.</p>","name":"callback"}],"name":"logoutOtherClients","longname":"Meteor.logoutOtherClients","kind":"function","memberof":"Meteor","scope":"static","___id":"T000002R000041","___s":true,"options":[],"locus":"Client"},"loginWithPassword":{"meta":{"range":[725,2207],"filename":"password_client.js","lineno":18,"path":"/Users/sashko/git/meteor/packages/accounts-password","code":{"id":"astnode100009710","name":"Meteor.loginWithPassword","type":"FunctionExpression","value":"function","paramnames":["selector","password","callback"]},"vars":{"selector":null,"":null}},"summary":"Log the user in with a password.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"params":[{"type":{"names":["Object","String"]},"description":"<p>Either a string interpreted as a username or an email; or an object with a single key: <code>email</code>, <code>username</code> or <code>id</code>.</p>","name":"user"},{"type":{"names":["String"]},"description":"<p>The user's password.</p>","name":"password"},{"type":{"names":["function"]},"optional":true,"description":"<p>Optional callback. Called with no arguments on success, or with a single <code>Error</code> argument on failure.</p>","name":"callback"}],"name":"loginWithPassword","longname":"Meteor.loginWithPassword","kind":"function","memberof":"Meteor","scope":"static","___id":"T000002R000711","___s":true,"options":[],"locus":"Client"},"status":{"meta":{"range":[35995,36124],"filename":"livedata_connection.js","lineno":935,"path":"/Users/sashko/git/meteor/packages/livedata","code":{"id":"astnode100351476","name":"status","type":"FunctionExpression","value":"function"},"vars":{"self":null}},"summary":"Get the current connection status. A reactive data source.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"memberof":"Meteor","name":"status","longname":"Meteor.status","kind":"function","scope":"static","___id":"T000002R063203","___s":true,"options":[],"params":[],"locus":"Client"},"reconnect":{"meta":{"range":[36346,36481],"filename":"livedata_connection.js","lineno":947,"path":"/Users/sashko/git/meteor/packages/livedata","code":{"id":"astnode100351496","name":"reconnect","type":"FunctionExpression","value":"function"},"vars":{"self":null}},"summary":"Force an immediate reconnection attempt if the client is not connected to the server.\n\n  This method does nothing if the client is already connected.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"memberof":"Meteor","name":"reconnect","longname":"Meteor.reconnect","kind":"function","scope":"static","___id":"T000002R063205","___s":true,"options":[],"params":[],"locus":"Client"},"disconnect":{"meta":{"range":[36592,36729],"filename":"livedata_connection.js","lineno":957,"path":"/Users/sashko/git/meteor/packages/livedata","code":{"id":"astnode100351516","name":"disconnect","type":"FunctionExpression","value":"function"},"vars":{"self":null}},"summary":"Disconnect the client from the server.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"memberof":"Meteor","name":"disconnect","longname":"Meteor.disconnect","kind":"function","scope":"static","___id":"T000002R063207","___s":true,"options":[],"params":[],"locus":"Client"},"onConnection":{"meta":{"range":[39287,39388],"filename":"livedata_server.js","lineno":1216,"path":"/Users/sashko/git/meteor/packages/livedata","code":{"id":"astnode100366092","name":"onConnection","type":"FunctionExpression","value":"function"},"vars":{"self":null}},"summary":"Register a callback to be called when a new DDP connection is made to the server.","tags":[{"originalTitle":"locus","title":"locus","text":"Server","value":"Server"}],"params":[{"type":{"names":["function"]},"description":"<p>The function to call when a new DDP connection is established.</p>","name":"callback"}],"memberof":"Meteor","name":"onConnection","longname":"Meteor.onConnection","kind":"function","scope":"static","___id":"T000002R064528","___s":true,"options":[],"locus":"Server"},"publish":{"meta":{"range":[42219,44185],"filename":"livedata_server.js","lineno":1288,"path":"/Users/sashko/git/meteor/packages/livedata","code":{"id":"astnode100366261","name":"publish","type":"FunctionExpression","value":"function"},"vars":{"self":null,"options":null,"self.warned_about_autopublish":null,"self.publish_handlers[undefined]":null,"":null}},"summary":"Publish a record set.","memberof":"Meteor","tags":[{"originalTitle":"locus","title":"locus","text":"Server","value":"Server"}],"params":[{"type":{"names":["String"]},"description":"<p>Name of the record set.  If <code>null</code>, the set has no name, and the record set is automatically sent to all connected clients.</p>","name":"name"},{"type":{"names":["function"]},"description":"<p>Function called on the server each time a client subscribes.  Inside the function, <code>this</code> is the publish handler object, described below.  If the client passed arguments to <code>subscribe</code>, the function is called with the same arguments.</p>","name":"func"}],"name":"publish","longname":"Meteor.publish","kind":"function","scope":"static","___id":"T000002R064539","___s":true,"options":[],"locus":"Server"},"methods":{"meta":{"range":[44569,44831],"filename":"livedata_server.js","lineno":1353,"path":"/Users/sashko/git/meteor/packages/livedata","code":{"id":"astnode100366421","name":"methods","type":"FunctionExpression","value":"function"},"vars":{"self":null,"":null}},"summary":"Defines functions that can be invoked over the network by clients.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"params":[{"type":{"names":["Object"]},"description":"<p>Dictionary whose keys are method names and values are functions.</p>","name":"methods"}],"memberof":"Meteor","name":"methods","longname":"Meteor.methods","kind":"function","scope":"static","___id":"T000002R064546","___s":true,"options":[],"locus":"Anywhere"},"setTimeout":{"meta":{"range":[969,1082],"filename":"timers.js","lineno":28,"path":"/Users/sashko/git/meteor/packages/meteor","code":{"id":"astnode100386128","name":"setTimeout","type":"FunctionExpression","value":"function"}},"memberof":"Meteor","summary":"Call a function in the future after waiting for a specified delay.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"params":[{"type":{"names":["function"]},"description":"<p>The function to run</p>","name":"func"},{"type":{"names":["Number"]},"description":"<p>Number of milliseconds to wait before calling function</p>","name":"delay"}],"name":"setTimeout","longname":"Meteor.setTimeout","kind":"function","scope":"static","___id":"T000002R066082","___s":true,"options":[],"locus":"Anywhere"},"setInterval":{"meta":{"range":[1351,1467],"filename":"timers.js","lineno":39,"path":"/Users/sashko/git/meteor/packages/meteor","code":{"id":"astnode100386141","name":"setInterval","type":"FunctionExpression","value":"function"}},"memberof":"Meteor","summary":"Call a function repeatedly, with a time delay between calls.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"params":[{"type":{"names":["function"]},"description":"<p>The function to run</p>","name":"func"},{"type":{"names":["Number"]},"description":"<p>Number of milliseconds to wait between each function call.</p>","name":"delay"}],"name":"setInterval","longname":"Meteor.setInterval","kind":"function","scope":"static","___id":"T000002R066083","___s":true,"options":[],"locus":"Anywhere"},"clearInterval":{"meta":{"range":[1677,1738],"filename":"timers.js","lineno":49,"path":"/Users/sashko/git/meteor/packages/meteor","code":{"id":"astnode100386154","name":"clearInterval","type":"FunctionExpression","value":"function"}},"memberof":"Meteor","summary":"Cancel a repeating function call scheduled by `Meteor.setInterval`.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"params":[{"type":{"names":["Number"]},"description":"<p>The handle returned by <code>Meteor.setInterval</code></p>","name":"id"}],"name":"clearInterval","longname":"Meteor.clearInterval","kind":"function","scope":"static","___id":"T000002R066084","___s":true,"options":[],"locus":"Anywhere"},"clearTimeout":{"meta":{"range":[1936,1995],"filename":"timers.js","lineno":59,"path":"/Users/sashko/git/meteor/packages/meteor","code":{"id":"astnode100386162","name":"clearTimeout","type":"FunctionExpression","value":"function"}},"memberof":"Meteor","summary":"Cancel a function call scheduled by `Meteor.setTimeout`.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"params":[{"type":{"names":["Number"]},"description":"<p>The handle returned by <code>Meteor.setTimeout</code></p>","name":"id"}],"name":"clearTimeout","longname":"Meteor.clearTimeout","kind":"function","scope":"static","___id":"T000002R066085","___s":true,"options":[],"locus":"Anywhere"},"absoluteUrl":{"meta":{"range":[769,1903],"filename":"url_common.js","lineno":10,"path":"/Users/sashko/git/meteor/packages/meteor","code":{"id":"astnode100386274","name":"Meteor.absoluteUrl","type":"FunctionExpression","value":"function","paramnames":["path","options"]},"vars":{"options":null,"path":null,"url":null}},"summary":"Generate an absolute URL pointing to the application. The server reads from the `ROOT_URL` environment variable to determine where it is running. This is taken care of automatically for apps deployed with `meteor deploy`, but must be provided when using `meteor bundle`.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"params":[{"type":{"names":["String"]},"optional":true,"description":"<p>A path to append to the root URL. Do not include a leading &quot;<code>/</code>&quot;.</p>","name":"path"},{"type":{"names":["Object"]},"optional":true,"name":"options"}],"name":"absoluteUrl","longname":"Meteor.absoluteUrl","kind":"function","memberof":"Meteor","scope":"static","___id":"T000002R066092","___s":true,"options":[{"type":{"names":["Boolean"]},"description":"<p>Create an HTTPS URL.</p>","name":"secure"},{"type":{"names":["Boolean"]},"description":"<p>Replace localhost with 127.0.0.1. Useful for services that don't recognize localhost as a domain name.</p>","name":"replaceLocalhost"},{"type":{"names":["String"]},"description":"<p>Override the default ROOT_URL from the server environment. For example: &quot;<code>http://foo.example.com</code>&quot;</p>","name":"rootUrl"}],"locus":"Anywhere"}},"EJSON":{"newBinary":{"meta":{"range":[1470,1769],"filename":"base64.js","lineno":70,"path":"/Users/sashko/git/meteor/packages/ejson","code":{"id":"astnode100269628","name":"EJSON.newBinary","type":"FunctionExpression","value":"function","paramnames":["len"]},"vars":{"ret":null,"i":null,"ret.$Uint8ArrayPolyfill":null}},"summary":"Allocate a new buffer of binary data that EJSON can serialize.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"params":[{"type":{"names":["Number"]},"description":"<p>The number of bytes of binary data to allocate.</p>","name":"size"}],"name":"newBinary","longname":"EJSON.newBinary","kind":"function","memberof":"EJSON","scope":"static","___id":"T000002R050894","___s":true,"options":[],"locus":"Anywhere"},"addType":{"meta":{"range":[1156,1321],"filename":"ejson.js","lineno":24,"path":"/Users/sashko/git/meteor/packages/ejson","code":{"id":"astnode100270478","name":"EJSON.addType","type":"FunctionExpression","value":"function","paramnames":["name","factory"]},"vars":{"customTypes[undefined]":null}},"summary":"Add a custom datatype to EJSON.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"params":[{"type":{"names":["String"]},"description":"<p>A tag for your custom type; must be unique among custom data types defined in your project, and must match the result of your type's <code>typeName</code> method.</p>","name":"name"},{"type":{"names":["function"]},"description":"<p>A function that deserializes a JSON-compatible value into an instance of your type.  This should match the serialization performed by your type's <code>toJSONValue</code> method.</p>","name":"factory"}],"name":"addType","longname":"EJSON.addType","kind":"function","memberof":"EJSON","scope":"static","___id":"T000002R050975","___s":true,"options":[],"locus":"Anywhere"},"toJSONValue":{"meta":{"range":[5932,6178],"filename":"ejson.js","lineno":193,"path":"/Users/sashko/git/meteor/packages/ejson","code":{"id":"astnode100271095","name":"EJSON.toJSONValue","type":"FunctionExpression","value":"function","paramnames":["item"]},"vars":{"changed":null,"item":null}},"summary":"Serialize an EJSON-compatible value into its plain JSON representation.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"params":[{"type":{"names":["EJSON"]},"description":"<p>A value to serialize to plain JSON.</p>","name":"val"}],"name":"toJSONValue","longname":"EJSON.toJSONValue","kind":"function","memberof":"EJSON","scope":"static","___id":"T000002R051025","___s":true,"options":[],"locus":"Anywhere"},"fromJSONValue":{"meta":{"range":[7902,8158],"filename":"ejson.js","lineno":262,"path":"/Users/sashko/git/meteor/packages/ejson","code":{"id":"astnode100271293","name":"EJSON.fromJSONValue","type":"FunctionExpression","value":"function","paramnames":["item"]},"vars":{"changed":null,"item":null}},"summary":"Deserialize an EJSON value from its plain JSON representation.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"params":[{"type":{"names":["Object"]},"description":"<p>A value to deserialize into EJSON.</p>","name":"val"}],"name":"fromJSONValue","longname":"EJSON.fromJSONValue","kind":"function","memberof":"EJSON","scope":"static","___id":"T000002R051036","___s":true,"options":[],"locus":"Anywhere"},"stringify":{"meta":{"range":[8786,9029],"filename":"ejson.js","lineno":283,"path":"/Users/sashko/git/meteor/packages/ejson","code":{"id":"astnode100271334","name":"EJSON.stringify","type":"FunctionExpression","value":"function","paramnames":["item","options"]},"vars":{"json":null}},"summary":"Serialize a value to a string.\n\nFor EJSON values, the serialization fully represents the value. For non-EJSON values, serializes the same way as `JSON.stringify`.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"params":[{"type":{"names":["EJSON"]},"description":"<p>A value to stringify.</p>","name":"val"},{"type":{"names":["Object"]},"optional":true,"name":"options"}],"name":"stringify","longname":"EJSON.stringify","kind":"function","memberof":"EJSON","scope":"static","___id":"T000002R051039","___s":true,"options":[{"type":{"names":["Boolean","Integer","String"]},"description":"<p>Indents objects and arrays for easy readability.  When <code>true</code>, indents by 2 spaces; when an integer, indents by that number of spaces; and when a string, uses the string as the indentation pattern.</p>","name":"indent"},{"type":{"names":["Boolean"]},"description":"<p>When <code>true</code>, stringifies keys in an object in sorted order.</p>","name":"canonical"}],"locus":"Anywhere"},"parse":{"meta":{"range":[9219,9396],"filename":"ejson.js","lineno":297,"path":"/Users/sashko/git/meteor/packages/ejson","code":{"id":"astnode100271376","name":"EJSON.parse","type":"FunctionExpression","value":"function","paramnames":["item"]}},"summary":"Parse a string into an EJSON value. Throws an error if the string is not valid EJSON.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"params":[{"type":{"names":["String"]},"description":"<p>A string to parse into an EJSON value.</p>","name":"str"}],"name":"parse","longname":"EJSON.parse","kind":"function","memberof":"EJSON","scope":"static","___id":"T000002R051041","___s":true,"options":[],"locus":"Anywhere"},"isBinary":{"meta":{"range":[9587,9741],"filename":"ejson.js","lineno":308,"path":"/Users/sashko/git/meteor/packages/ejson","code":{"id":"astnode100271403","name":"EJSON.isBinary","type":"FunctionExpression","value":"function","paramnames":["obj"]}},"summary":"Returns true if `x` is a buffer of binary data, as returned from [`EJSON.newBinary`](#ejson_new_binary).","params":[{"type":{"names":["Object"]},"description":"<p>The variable to check.</p>","name":"x"}],"tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"name":"isBinary","longname":"EJSON.isBinary","kind":"function","memberof":"EJSON","scope":"static","___id":"T000002R051042","___s":true,"options":[],"locus":"Anywhere"},"equals":{"meta":{"range":[10260,12514],"filename":"ejson.js","lineno":321,"path":"/Users/sashko/git/meteor/packages/ejson","code":{"id":"astnode100271428","name":"EJSON.equals","type":"FunctionExpression","value":"function","paramnames":["a","b","options"]},"vars":{"i":null,"keyOrderSensitive":null,"ret":null,"bKeys":null,"":null}},"summary":"Return true if `a` and `b` are equal to each other.  Return false otherwise.  Uses the `equals` method on `a` if present, otherwise performs a deep comparison.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"params":[{"type":{"names":["EJSON"]},"name":"a"},{"type":{"names":["EJSON"]},"name":"b"},{"type":{"names":["Object"]},"optional":true,"name":"options"}],"name":"equals","longname":"EJSON.equals","kind":"function","memberof":"EJSON","scope":"static","___id":"T000002R051043","___s":true,"options":[{"type":{"names":["Boolean"]},"description":"<p>Compare in key sensitive order, if supported by the JavaScript implementation.  For example, <code>{a: 1, b: 2}</code> is equal to <code>{b: 2, a: 1}</code> only when <code>keyOrderSensitive</code> is <code>false</code>.  The default is <code>false</code>.</p>","name":"keyOrderSensitive"}],"locus":"Anywhere"},"clone":{"meta":{"range":[12624,13890],"filename":"ejson.js","lineno":407,"path":"/Users/sashko/git/meteor/packages/ejson","code":{"id":"astnode100271815","name":"EJSON.clone","type":"FunctionExpression","value":"function","paramnames":["v"]},"vars":{"ret":null,"i":null,"ret[undefined]":null,"":null}},"summary":"Return a deep copy of `val`.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"params":[{"type":{"names":["EJSON"]},"description":"<p>A value to copy.</p>","name":"val"}],"name":"clone","longname":"EJSON.clone","kind":"function","memberof":"EJSON","scope":"static","___id":"T000002R051054","___s":true,"options":[],"locus":"Anywhere"}},"HTTP":{"call":{"meta":{"range":[1471,6304],"filename":"httpcall_client.js","lineno":17,"path":"/Users/sashko/git/meteor/packages/http","code":{"id":"astnode100308171","name":"HTTP.call","type":"FunctionExpression","value":"function","paramnames":["method","url","options","callback"]},"vars":{"callback":null,"options":null,"method":null,"headers":null,"content":null,"headers['Content-Type']":null,"params_for_url":null,"params_for_body":null,"query_match":null,"url":null,"username":null,"password":null,"colonLoc":null,"":null,"xhr":null,"k":null,"timed_out":null,"timer":null,"xhr.onreadystatechange":null}},"summary":"Perform an outbound HTTP request.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"params":[{"type":{"names":["String"]},"description":"<p>The <a href=\"http://en.wikipedia.org/wiki/HTTP_method\">HTTP method</a> to use, such as &quot;<code>GET</code>&quot;, &quot;<code>POST</code>&quot;, or &quot;<code>HEAD</code>&quot;.</p>","name":"method"},{"type":{"names":["String"]},"description":"<p>The URL to retrieve.</p>","name":"url"},{"type":{"names":["function"]},"optional":true,"description":"<p>Optional callback.  If passed, the method runs asynchronously, instead of synchronously, and calls asyncCallback.  On the client, this callback is required.</p>","name":"asyncCallback"},{"type":{"names":["Object"]},"optional":true,"name":"options"}],"name":"call","longname":"HTTP.call","kind":"function","memberof":"HTTP","scope":"static","___id":"T000002R059489","___s":true,"options":[{"type":{"names":["String"]},"description":"<p>String to use as the HTTP request body.</p>","name":"content"},{"type":{"names":["Object"]},"description":"<p>JSON-able object to stringify and use as the HTTP request body. Overwrites <code>content</code>.</p>","name":"data"},{"type":{"names":["String"]},"description":"<p>Query string to go in the URL. Overwrites any query string in <code>url</code>.</p>","name":"query"},{"type":{"names":["Object"]},"description":"<p>Dictionary of request parameters to be encoded and placed in the URL (for GETs) or request body (for POSTs).  If <code>content</code> or <code>data</code> is specified, <code>params</code> will always be placed in the URL.</p>","name":"params"},{"type":{"names":["String"]},"description":"<p>HTTP basic authentication string of the form <code>&quot;username:password&quot;</code></p>","name":"auth"},{"type":{"names":["Object"]},"description":"<p>Dictionary of strings, headers to add to the HTTP request.</p>","name":"headers"},{"type":{"names":["Number"]},"description":"<p>Maximum time in milliseconds to wait for the request before failing.  There is no timeout by default.</p>","name":"timeout"},{"type":{"names":["Boolean"]},"description":"<p>If <code>true</code>, transparently follow HTTP redirects. Cannot be set to <code>false</code> on the client. Default <code>true</code>.</p>","name":"followRedirects"}],"locus":"Anywhere"}},"DDP":{"connect":{"meta":{"range":[58256,58401],"filename":"livedata_connection.js","lineno":1559,"path":"/Users/sashko/git/meteor/packages/livedata","code":{"id":"astnode100353419","name":"DDP.connect","type":"FunctionExpression","value":"function","paramnames":["url","options"]},"vars":{"ret":null}},"summary":"Connect to the server of a different Meteor application to subscribe to its document sets and invoke its remote methods.","tags":[{"originalTitle":"locus","title":"locus","text":"Anywhere","value":"Anywhere"}],"params":[{"type":{"names":["String"]},"description":"<p>The URL of another Meteor application.</p>","name":"url"}],"name":"connect","longname":"DDP.connect","kind":"function","memberof":"DDP","scope":"static","___id":"T000002R063322","___s":true,"options":[],"locus":"Anywhere"}},"Session":{"set":{"meta":{"range":[293,707],"filename":"session.js","lineno":12,"path":"/Users/sashko/git/meteor/packages/session","code":{}},"memberof":"Session","kind":"function","name":"set","summary":"Set a variable in the session. Notify any listeners that the value has changed (eg: redraw templates, and rerun any [`Deps.autorun`](#deps_autorun) computations, that called [`Session.get`](#session_get) on this `key`.)","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"params":[{"type":{"names":["String"]},"description":"<p>The key to set, eg, <code>selectedItem</code></p>","name":"key"},{"type":{"names":["EJSONable","undefined"]},"description":"<p>The new value for <code>key</code></p>","name":"value"}],"scope":"static","longname":"Session.set","___id":"T000002R072442","___s":true,"options":[],"locus":"Client"},"setDefault":{"meta":{"range":[709,1027],"filename":"session.js","lineno":21,"path":"/Users/sashko/git/meteor/packages/session","code":{}},"memberof":"Session","kind":"function","name":"setDefault","summary":"Set a variable in the session if it is undefined. Otherwise works exactly the same as [`Session.set`](#session_set).","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"params":[{"type":{"names":["String"]},"description":"<p>The key to set, eg, <code>selectedItem</code></p>","name":"key"},{"type":{"names":["EJSONable","undefined"]},"description":"<p>The new value for <code>key</code></p>","name":"value"}],"scope":"static","longname":"Session.setDefault","___id":"T000002R072443","___s":true,"options":[],"locus":"Client"},"get":{"meta":{"range":[1029,1520],"filename":"session.js","lineno":30,"path":"/Users/sashko/git/meteor/packages/session","code":{}},"memberof":"Session","kind":"function","name":"get","summary":"Get the value of a session variable. If inside a [reactive computation](#reactivity), invalidate the computation the next time the value of the variable is changed by [`Session.set`](#session_set). This returns a clone of the session value, so if it's an object or an array, mutating the returned value has no effect on the value stored in the session.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"params":[{"type":{"names":["String"]},"description":"<p>The name of the session variable to return</p>","name":"key"}],"scope":"static","longname":"Session.get","___id":"T000002R072444","___s":true,"options":[],"locus":"Client"},"equals":{"meta":{"range":[1522,1931],"filename":"session.js","lineno":38,"path":"/Users/sashko/git/meteor/packages/session","code":{}},"memberof":"Session","kind":"function","name":"equals","summary":"Test if a session variable is equal to a value. If inside a [reactive computation](#reactivity), invalidate the computation the next time the variable changes to or from the value.","tags":[{"originalTitle":"locus","title":"locus","text":"Client","value":"Client"}],"params":[{"type":{"names":["String"]},"description":"<p>The name of the session variable to test</p>","name":"key"},{"type":{"names":["String","Number","Boolean","null","undefined"]},"description":"<p>The value to test against</p>","name":"value"}],"scope":"static","longname":"Session.equals","___id":"T000002R072448","___s":true,"options":[],"locus":"Client"}}};